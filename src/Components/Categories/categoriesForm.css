.form-container {
    box-shadow: 0px 0px 15px 5px rgba(141, 127, 127, 0.123);
    padding: 20px;
    border-radius: 10px;
    height: 100%;
    width: 600px;
    margin: 15px auto;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

input[type="file"]::-webkit-file-upload-button {
    background-color: var(--color-primary);
    color: white;
    border: transparent;
    padding: 10px;
    border-radius: 5px;
    margin-right: 10px;
    cursor: pointer;
}

.input-field {
    padding: 10px 15px;
    border: 1px solid #c1c1c1;
    border-radius: 5px;
}

.input-field::placeholder {
    color: rgba(42, 40, 40, 0.528);
}

.ck {
    height: 150px;
    border-radius: 5px !important;
}

.ck.ck-editor__editable > .ck-placeholder::before {
    color: rgba(0, 0, 0, 0.47);
}

.input-preview-image {
    display: flex;
    flex-direction: column-reverse;
    align-content: flex-start;
}

.input-label-container {
    flex-grow: 1;
}

.preview-container {
    align-self: center;
    height: 200px;
    width: 200px;
    border-radius: 9pxpx;
    background-position: center;
    background-size: cover;
}

.preview-container img {
    width: 100%;
}

.submit-btn {
    height: 50px;
    background-color: var(--color-primary);
    font-size: large;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    color: #fff;
}

@media screen and (max-width: 650px) {
    .form-container {
        box-shadow: none;
        box-sizing: border-box;
        width: 100%;
        margin: 15px auto;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .form-title {
        box-shadow: 0 6px 6px -4px rgba(128, 128, 128, 0.408);
    }
}

@media screen and (max-width: 500px) {
    .form-error {
        font-size: .8em;
        color: var(--color-primary);
    }
}

@keyframes pulse-animation {
    0% {
        opacity: .8;
    }

    50% {
        opacity: 0.4;
    }

    100% {
        opacity: .8;
    }
}

.pulse {
    animation: pulse-animation 1s ease-out alternate;
    animation-iteration-count: infinite;
}